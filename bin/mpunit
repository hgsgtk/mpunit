#!/usr/bin/env php
<?php declare(strict_types=1);

use MPUnit\TestResult;

require __DIR__ . '/../vendor/autoload.php';

// When assertion is failed, throw AssertError
ini_set('assert.exception', '1');

// When assertion is failed, omit PHP warning
assert_options(ASSERT_WARNING, '0');

// Set callback function
$testResult = new TestResult();

echo 'Mini PHP xUnit Testing.' . PHP_EOL . PHP_EOL;

$argv = $_SERVER['argv'];
$testDir = $argv[1] ?? 'tests';

// TODO if not found, print no tests here.
chdir($testDir);

$testFiles = glob('*_test.php');
foreach ($testFiles as $testFile) {
    require_once $testFile;
}

function isTestFunc($funcName) {
    return 'test' === substr($funcName, 0, 4);
}

$testFunctions = array_filter(
        get_defined_functions(true)['user'],
        'isTestFunc'
);
foreach ($testFunctions as $func) {
    try {
        $func(); // TODO: constrain method signatures
        $testResult->addSuccess();
        echo '.';
    } catch (\AssertionError $e) {
        $testResult->addFailure(
            $e->getFile(),
            $e->getLine(),
            $e->getMessage()
        );
        echo 'F';
    }
}

echo PHP_EOL . PHP_EOL;

exit($testResult->endTest());
